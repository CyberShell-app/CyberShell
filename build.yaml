---
####################################################
#      Pipeline Build Task Configuration           #
####################################################

BuildWorkflow:
  ".": # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_changelog_release_output
    - Generate_Wiki_Content
    - Generate_Markdown_For_Public_Commands
    - Clean_Markdown_Of_Public_Commands

  pack:
    - build
    - package_module_nupkg

  # Defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    # Uncomment to modify the PSModulePath in the test pipeline (also requires the build configuration section SetPSModulePath).
    - Set_PSModulePath
    - Pester_Tests_Stop_On_Fail
    # Use this task if pipeline uses code coverage and the module is using the
    # pattern of Public, Private, Enum, Classes.
    #- Convert_Pester_Coverage
    - Pester_if_Code_Coverage_Under_Threshold

  # Use this task when you have multiple parallel tests, which produce multiple
  # code coverage files and needs to get merged into one file.
  #merge:
  #- Merge_CodeCoverage_Files

  publish:
    #- publish_module_to_gallery
    - Publish_Release_To_GitHub
    - Publish-WikiContent

####################################################
#          ModuleBuilder Configuration             #
####################################################

BuiltModuleSubdirectory: module
CopyPaths:
  - en-US
Encoding: UTF8
VersionedOutputDirectory: true

TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

NestedModule:
#  HelperSubmodule: # This is the first submodule to build into the output
#    Path: ./*/Modules/HelperSubmodule/HelperSubmodule.psd1
#    #  is trimmed (remove metadata & Prerelease tag) and OutputDirectory expanded (the only one)
#    OutputDirectory: ///Modules/HelperSubmodule
#    VersionedOutputDirectory: false
#    AddToManifest: false
#    SemVer:
#    # suffix:
#    # prefix:


####################################################
#       PESTER  Configuration                      #
####################################################

Pester:
  OutputFormat: NUnitXML
  # Excludes one or more paths from being used to calculate code coverage.
  ExcludeFromCodeCoverage:
  Script:
  # - tests/QA/module.tests.ps1
  # - tests/QA
  # - tests/Unit
  # - tests/Integration
  ExcludeTag:
  #  - helpQuality
  #  - FunctionalQuality
  #  - TestQuality
  Tag:
  CodeCoverageThreshold: 0 # Set to 0 to bypass

ModuleBuildTasks:
  Sampler:
    - "*.build.Sampler.ib.tasks"
  Sampler.GitHubTasks:
    - "*.ib.tasks"
  DscResource.DocGenerator:
    - "Task.*"

####################################################
#               GitHub Configuration               #
####################################################
GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  GitHubConfigUserName: fslef
  GitHubConfigUserEmail: fts+github@lefebvre.co
  UpdateChangelogOnPrerelease: false

####################################################
#      DscResource.DocGenerator Configuration      #
####################################################
DscResource.DocGenerator:
  Generate_Conceptual_Help:
    MarkdownCodeRegularExpression:
      - '\(.+?\)' # Match inline code-block
      - '\\(\\)' # Match escaped backslash
      - '\[[^\[]+\]\((.+?)\)' # Match markdown URL
      - '_(.+?)_' # Match Italic (underscore)
      - '\*\*(.+?)\*\*' # Match bold
      - '\*(.+?)\*' # Match Italic (asterisk)
  Publish_GitHub_Wiki_Content:
    Debug: true
  Generate_Wiki_Sidebar:
     Debug: false
     AlwaysOverwrite: true